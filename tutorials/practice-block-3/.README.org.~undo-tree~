(undo-tree-save-format-version . 1)
"82ca1fbf5e1ddc0f3040174b1ebcbbeef8357ff7"
[nil nil nil nil (25624 33539 552790 897000) 0 nil]
([nil nil ((#("<<<<<<< HEAD" 0 1 (fontified t smerge-refine-part (1 . 2) face smerge-markers) 1 12 (fontified t face smerge-markers)) . 5805) (undo-tree-id21 . 12) (undo-tree-id22 . 12) (undo-tree-id23 . -1) (t 25624 33486 309343 783000)) nil (25624 33539 552789 11000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5805)) nil (25624 33539 552785 239000) 0 nil])
([nil nil ((#("We then need to find the /shortest/ path from source to target." 0 1 (fontified t) 1 25 (fontified t) 25 35 (fontified t face (italic) font-lock-multiline t org-emphasis t) 35 63 (fontified t)) . 5805)) nil (25624 33539 552783 353000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5805)) nil (25624 33539 552781 468000) 0 nil])
([nil nil ((#("=======" 0 7 (fontified t face (org-verbatim) font-lock-multiline t org-emphasis t)) . 5805)) nil (25624 33539 552780 71000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5805)) nil (25624 33539 552778 115000) 0 nil])
([nil nil ((#(">>>>>>> bdc4626c247f871c9251fda627fb3b026ebe1ad4" 0 48 (fontified t)) . 5898)) nil (25624 33539 552775 740000) 0 nil])
([nil nil ((5869 . 5870) (#(" " 0 1 (fontified nil)) . 5868) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (5869 . 5870)) nil (25624 33539 552773 295000) 0 nil])
([nil nil ((5870 . 5884)) nil (25624 33539 552767 498000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5900) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 5901) nil (25624 33539 552764 215000) 0 nil])
([nil current ((5900 . 5901)) nil (25624 33539 552734 599000) 0 nil])
nil
